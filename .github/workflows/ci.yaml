name: CI 

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test on ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Reduced Python version matrix for faster CI
        python-version: ["3.11", "3.12"]
    env:
      UV_PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v6 
        with:
          enable-cache: true

      # Cache model weights to speed up any foundation model tests
      - name: Cache model weights
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/huggingface
            ~/.cache/torch
          key: model-weights-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            model-weights-${{ runner.os }}-${{ matrix.python-version }}-
            model-weights-${{ runner.os }}-

      - name: Run tests 
        run: uv run pytest
        timeout-minutes: 10

      - name: Test import class
        run: uv run -- python -c "from timecopilot import TimeCopilot, TimeCopilotForecaster" 

  test-live:
    name: test live
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v6 
        with:
          enable-cache: true

      - name: Run tests 
        run: uv run pytest -m live
        timeout-minutes: 15
        env: 
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} 

  build-docs:
    name: build docs
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v6

      - name: Build docs
        run: uv run --group docs mkdocs build
